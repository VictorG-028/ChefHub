
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE "public"."Ingredient" (
    "id" smallint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "name" "text" DEFAULT ''::"text" NOT NULL,
    "quantity" "text" DEFAULT ''::"text" NOT NULL,
    "unit_measure" "text" DEFAULT ''::"text" NOT NULL
);

ALTER TABLE "public"."Ingredient" OWNER TO "postgres";

CREATE TABLE "public"."Recipe" (
    "id" smallint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "title" "text" DEFAULT '''sem t√≠tulo''::text'::"text" NOT NULL,
    "ingredients" "text" DEFAULT ''::"text" NOT NULL,
    "instructions" "text" DEFAULT ''::"text" NOT NULL
);

ALTER TABLE "public"."Recipe" OWNER TO "postgres";

CREATE TABLE "public"."SharedRecipe" (
    "id" bigint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "recipe_id" smallint NOT NULL,
    "description" "text" DEFAULT ''::"text",
    "img_link" "text" DEFAULT ''::"text"
);

ALTER TABLE "public"."SharedRecipe" OWNER TO "postgres";

ALTER TABLE "public"."SharedRecipe" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."SharedRecipe_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE "public"."User" (
    "id" "uuid" NOT NULL,
    "email" "text" NOT NULL,
    "password" "text" NOT NULL
);

ALTER TABLE "public"."User" OWNER TO "postgres";

ALTER TABLE ONLY "public"."Ingredient"
    ADD CONSTRAINT "Ingredient_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."Ingredient"
    ADD CONSTRAINT "Ingredient_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Recipe"
    ADD CONSTRAINT "Recipe_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."Recipe"
    ADD CONSTRAINT "Recipe_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."SharedRecipe"
    ADD CONSTRAINT "SharedRecipe_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."User"
    ADD CONSTRAINT "User_email_key" UNIQUE ("email");

ALTER TABLE ONLY "public"."User"
    ADD CONSTRAINT "User_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Ingredient"
    ADD CONSTRAINT "Ingredient_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."User"("id");

ALTER TABLE ONLY "public"."Recipe"
    ADD CONSTRAINT "Recipe_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."User"("id");

ALTER TABLE ONLY "public"."SharedRecipe"
    ADD CONSTRAINT "SharedRecipe_recipe_id_fkey" FOREIGN KEY ("recipe_id") REFERENCES "public"."Recipe"("id");

ALTER TABLE ONLY "public"."SharedRecipe"
    ADD CONSTRAINT "SharedRecipe_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."User"("id");

ALTER TABLE "public"."Ingredient" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."Recipe" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."SharedRecipe" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."User" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."Ingredient" TO "anon";
GRANT ALL ON TABLE "public"."Ingredient" TO "authenticated";
GRANT ALL ON TABLE "public"."Ingredient" TO "service_role";

GRANT ALL ON TABLE "public"."Recipe" TO "anon";
GRANT ALL ON TABLE "public"."Recipe" TO "authenticated";
GRANT ALL ON TABLE "public"."Recipe" TO "service_role";

GRANT ALL ON TABLE "public"."SharedRecipe" TO "anon";
GRANT ALL ON TABLE "public"."SharedRecipe" TO "authenticated";
GRANT ALL ON TABLE "public"."SharedRecipe" TO "service_role";

GRANT ALL ON SEQUENCE "public"."SharedRecipe_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."SharedRecipe_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."SharedRecipe_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."User" TO "anon";
GRANT ALL ON TABLE "public"."User" TO "authenticated";
GRANT ALL ON TABLE "public"."User" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
